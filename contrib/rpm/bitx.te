policy_module(bitx, 1.100.1)

########################################
#
# Declarations
#

type bitx_t;
type bitx_exec_t;
init_daemon_domain(bitx_t, bitx_exec_t)

permissive bitx_t;

type bitx_initrc_exec_t;
init_script_file(bitx_initrc_exec_t)

type bitx_conf_t;
files_type(bitx_conf_t)

type bitx_var_lib_t;
files_type(bitx_var_lib_t)

type bitx_var_run_t;
files_type(bitx_var_run_t)

type bitx_port_t;
corenet_port(bitx_port_t)

########################################
#
# bitx local policy
#
allow bitx_t self:process { fork };

allow bitx_t self:fifo_file rw_fifo_file_perms;
allow bitx_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(bitx_t, bitx_conf_t, bitx_conf_t)
manage_files_pattern(bitx_t, bitx_conf_t, bitx_conf_t)

manage_dirs_pattern(bitx_t, bitx_var_lib_t, bitx_var_lib_t)
manage_files_pattern(bitx_t, bitx_var_lib_t, bitx_var_lib_t)
files_var_lib_filetrans(bitx_t, bitx_var_lib_t, { dir file })

manage_dirs_pattern(bitx_t, bitx_var_run_t, bitx_var_run_t)
manage_files_pattern(bitx_t, bitx_var_run_t, bitx_var_run_t)

sysnet_dns_name_resolve(bitx_t)
corenet_all_recvfrom_unlabeled(bitx_t)

allow bitx_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(bitx_t)
corenet_tcp_sendrecv_generic_node(bitx_t)
corenet_tcp_sendrecv_all_ports(bitx_t)
corenet_tcp_bind_generic_node(bitx_t)

gen_require(`
    type bitx_port_t;
')
allow bitx_t bitx_port_t:tcp_socket name_bind;

gen_require(`
    type bitx_port_t;
')
allow bitx_t bitx_port_t:tcp_socket name_connect;

domain_use_interactive_fds(bitx_t)

files_read_etc_files(bitx_t)

miscfiles_read_localization(bitx_t)

sysnet_dns_name_resolve(bitx_t)

allow bitx_t bitx_exec_t:file execute_no_trans;
allow bitx_t self:process setsched;
corecmd_exec_ls(bitx_t)
corenet_tcp_connect_http_port(bitx_t)
dev_read_urand(bitx_t)
fs_getattr_xattr_fs(bitx_t)
kernel_read_system_state(bitx_t)
